<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringDataJpa学习笔记 on ShangguanHong</title>
    <link>https://shangguanhong.github.io/categories/springdatajpa%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in SpringDataJpa学习笔记 on ShangguanHong</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Jul 2019 16:28:17 +0000</lastBuildDate>
    <atom:link href="https://shangguanhong.github.io/categories/springdatajpa%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JPA使用Specification动态查询</title>
      <link>https://shangguanhong.github.io/2019/07/22/jpa%E4%BD%BF%E7%94%A8specification%E5%8A%A8%E6%80%81%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 22 Jul 2019 16:28:17 +0000</pubDate>
      <guid>https://shangguanhong.github.io/2019/07/22/jpa%E4%BD%BF%E7%94%A8specification%E5%8A%A8%E6%80%81%E6%9F%A5%E8%AF%A2/</guid>
      <description>&lt;h1 id=&#34;1-前言&#34;&gt;1. 前言&lt;/h1&gt;&#xA;&lt;p&gt;有时我们在查询某个实体的时候，给定的条件是不固定，这个时候就需要动态构建相应的查询语句，在 Spring Data JPA 中可以通过继承 JpaSpecificationExecutor 接口来实现动态查询。相比于使用 JPQL 来进行动态查询，其优势是类型安全，更加的面向对象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JPA中的CascadeType(级联操作)解析</title>
      <link>https://shangguanhong.github.io/2019/07/19/jpa%E4%B8%AD%E7%9A%84cascadetype-%E7%BA%A7%E8%81%94%E6%93%8D%E4%BD%9C-%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 19 Jul 2019 12:27:11 +0000</pubDate>
      <guid>https://shangguanhong.github.io/2019/07/19/jpa%E4%B8%AD%E7%9A%84cascadetype-%E7%BA%A7%E8%81%94%E6%93%8D%E4%BD%9C-%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;1-cascade介绍&#34;&gt;1. Cascade介绍&lt;/h1&gt;&#xA;&lt;p&gt;​&#x9;&#x9;Cascade(级联)在编写触发器时经常用到，触发器的作用是当 主控表信息改变时，用来保证其关联表中数据同步更新。若对触发器来修改或删除关联表相记录，必须要删除对应的关联表信息，否则，会存有脏数据。所以，适当的做法是，删除主表的同时，关联表的信息也要同时删除，在 hibernate 中，只需设置 cascade 属性值即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot整合Spring Data Jpa</title>
      <link>https://shangguanhong.github.io/2019/07/08/spring-boot%E6%95%B4%E5%90%88springdatajpa/</link>
      <pubDate>Mon, 08 Jul 2019 14:14:55 +0000</pubDate>
      <guid>https://shangguanhong.github.io/2019/07/08/spring-boot%E6%95%B4%E5%90%88springdatajpa/</guid>
      <description>&lt;h1 id=&#34;1-前言&#34;&gt;1. 前言&lt;/h1&gt;&#xA;&lt;p&gt;之前的文章中写到了如何使用 Spring Boot 整合 mybatis(传送门: &lt;a href=&#34;https://shangguanhong.github.io/2019/06/03/Spring-Boot%E6%95%B4%E5%90%88MyBatis/&#34;&gt;Spring-Boot整合MyBatis&lt;/a&gt;)，今天学习一下如何使用 Spring Boot 整合 Spring Data Jpa。&lt;/p&gt;&#xA;&lt;p&gt;项目代码:  &lt;a href=&#34;https://github.com/ShangguanHong/SpringBootDemo/tree/master/springboot-jpa&#34;&gt;https://github.com/ShangguanHong/SpringBootDemo/tree/master/springboot-jpa&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;2-spring-data-jpa简介&#34;&gt;2. Spring Data JPA简介&lt;/h1&gt;&#xA;&lt;p&gt;Spring Data JPA 是 Spring 基于 ORM 框架、JPA 规范封装的一套 JPA 应用框架，可使开发者用极简的代码即可实现对数据的访问和操作。它提供了包括增删改查等在内的常用功能， 且易于扩展！学习并使用 Spring Data JPA 可以极大的提供开发效率。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
